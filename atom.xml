<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tudou&#39;s Blog</title>
  
  <subtitle>生命的荣枯、全视你怎么去栽培</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lizhuangs.github.io/"/>
  <updated>2019-05-19T06:14:20.539Z</updated>
  <id>http://lizhuangs.github.io/</id>
  
  <author>
    <name>很拽の土豆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>建站说明</title>
    <link href="http://lizhuangs.github.io/2019/05/18/%E5%BB%BA%E7%AB%99%E8%AF%B4%E6%98%8E/"/>
    <id>http://lizhuangs.github.io/2019/05/18/建站说明/</id>
    <published>2019-05-18T14:08:32.000Z</published>
    <updated>2019-05-19T06:14:20.539Z</updated>
    
    <content type="html"><![CDATA[<div class="note success">            <p>很久以来，一直想自己写一套管理框架出来，包括权限和页面。仅仅是想练手。<br>奈何工作太忙，下班也没精力做这个。加上死宅男，懒拖各种患者于是乎现在也没有动手~</p>          </div><p>前段时间看了下<code>hexo</code>的文档，发现比想象中简单，何不先拿来主义？<br>嗯，说干就干。于是本站诞生了。</p><a id="more"></a><h3 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h3><ul><li>本站的关于页面简单的介绍，如果我们有相同的爱好，可以留言，我们的故事说不定就开始了。</li><li>祖籍湖北孝感，现籍武汉，2011年至今帝都北漂中。</li><li>程序猿一枚，主做JAVA后端，包括但不限于<code>JAVA</code>、<code>数据库</code>、<code>大数据</code>、<code>前端</code>、<code>自动化集成&amp;测试</code>、<code>运维</code>等拥有浓烈的兴趣并且略有了解。</li><li>对<code>docker</code>、<code>electron</code>、<code>vue3+</code>、<code>nodejs</code>有强烈的学习欲望和兴趣，未来有空会进行这方面的研究学习。</li><li>主力开发机为<code>deppin &amp; win10</code>。家用<code>win8</code>。</li><li>8年米粉一枚，用过米1、小米note、米6（目前在用）。ipad1和小米平板4。</li><li>如何联系我？网页右下角有一个不起眼的三条线菜单按钮，点击它再点最上面的站点概览~</li></ul><h3 id="梦想清单"><a href="#梦想清单" class="headerlink" title="梦想清单"></a>梦想清单</h3><ul><li><code>台式机</code>基本要求：内存32G起步，支持5G数据流量和WIFI6，4K屏幕，24寸左右，来一套docker集群，一顿操作猛于虎~</li><li><code>单反&amp;运动相机</code>鉴于目前的旗舰手机已经4800W像素，夜景和长焦已经十分强大，而且还在发展，所以单反的需求越来越低了。</li><li><code>摩托车</code>，鉴于北京和武汉很多地方限行，且驾照没空考，从长计议。前几年考了C2驾照，从驾校出来至今没摸过车，已忘光。</li></ul><h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><ol><li>对于懒死宅的我来说，本站仅为练手娱乐，工作中一般用有道云笔记。所以目前没空分享一些技术博客</li><li>本站所有文章皆使用<code>markdown</code>编写，软件为vsc，其中markdown示例一文是本人原创，整合了<code>markdown</code>和<code>hexo</code>的语法，感兴趣的可以学习一下</li><li>本站托管在github和gitee上面，因为涉及到一些私人账号信息，所以hexo配置信息不公开</li><li>本站目前没有做SEO优化，支持RSS订阅、评论、打赏、搜索等基本功能</li><li>本站支持PC和手机访问，并且做了手机宽屏优化和CDN（JS、CSS、Font）加速</li><li>加了一些字体和特效，你可以使用鼠标或者手指狂点~</li></ol><p>enjoy~</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note success&quot;&gt;
            &lt;p&gt;很久以来，一直想自己写一套管理框架出来，包括权限和页面。仅仅是想练手。&lt;br&gt;奈何工作太忙，下班也没精力做这个。加上死宅男，懒拖各种患者于是乎现在也没有动手~&lt;/p&gt;
          &lt;/div&gt;

&lt;p&gt;前段时间看了下&lt;code&gt;hexo&lt;/code&gt;的文档，发现比想象中简单，何不先拿来主义？&lt;br&gt;嗯，说干就干。于是本站诞生了。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://lizhuangs.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://lizhuangs.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="hexo" scheme="http://lizhuangs.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>docker-compose详解</title>
    <link href="http://lizhuangs.github.io/2019/05/12/docker-compose%E8%AF%A6%E8%A7%A3/"/>
    <id>http://lizhuangs.github.io/2019/05/12/docker-compose详解/</id>
    <published>2019-05-12T09:28:07.000Z</published>
    <updated>2019-05-18T05:11:34.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="固定容器"><a href="#固定容器" class="headerlink" title="固定容器"></a>固定容器</h2><p>compose会查找之前的容器，把旧容器的volume-data拷贝到容器中。除非手动用docker rm命令删除容器，否则CONTAINER ID不会发生改变。 </p><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><table><thead><tr><th>Compose file format</th><th>Docker Engine</th></tr></thead><tbody><tr><td>1</td><td>1.9.0+</td></tr><tr><td>2.0</td><td>1.10.0+</td></tr><tr><td>2.1</td><td>1.12.0+</td></tr><tr><td>2.2, 3.0, 3.1, 3.2</td><td>1.13.0+</td></tr><tr><td>2.3, 3.3, 3.4, 3.5</td><td>17.06.0+</td></tr><tr><td>2.4</td><td>17.12.0+</td></tr><tr><td>3.6</td><td>18.02.0+</td></tr><tr><td>3.7</td><td>18.06.0+</td></tr></tbody></table><a id="more"></a><h2 id="文件结构说明"><a href="#文件结构说明" class="headerlink" title="文件结构说明"></a>文件结构说明</h2><p>根节点</p><ul><li>version 定义了版本信息</li><li>services 定义了服务的配置信息</li><li>networks 定义了网络信息，提供给 services 中的 具体容器使用</li><li>volumes 定义了卷信息，提供给 services 中的 具体容器使用</li></ul><ol><li>services 的定义包含应用于为该服务启动的每个容器的配置，非常类似于将命令行的 docker container create</li><li>networks 的定义类似于命令行的 docker network create</li><li>volumes 的定义类似于命令行的 docker volume create</li></ol><h2 id="顶级配置"><a href="#顶级配置" class="headerlink" title="顶级配置"></a>顶级配置</h2><h3 id="container-name"><a href="#container-name" class="headerlink" title="container_name"></a>container_name</h3><p>指定容器名称。Compose 的容器默认名称格式是：&lt;项目名称&gt;&lt;服务名称&gt;&lt;序号&gt;</p><blockquote><p>注意: 指定容器名称后，该服务将无法进行扩展（scale），因为 Docker 不允许多个容器具有相同的名称</p></blockquote><h3 id="labels"><a href="#labels" class="headerlink" title="labels"></a>labels</h3><p>为容器添加 Docker 元数据（metadata）信息。例如可以为容器添加辅助说明信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">labels:</span><br><span class="line">  com.startupteam.description: &quot;webapp for a startup team&quot;</span><br><span class="line">  com.startupteam.department: &quot;devops department&quot;</span><br></pre></td></tr></table></figure><h3 id="构建时应用的配置选项"><a href="#构建时应用的配置选项" class="headerlink" title="构建时应用的配置选项"></a>构建时应用的配置选项</h3><blockquote><p>注意每个服务都必须通过 image 指令指定镜像或 build 指令（需要 Dockerfile）等来自动构建生成镜像</p></blockquote><blockquote><p>如果使用 build 指令，那么在 Dockerfile 中设置的选项(例如：CMD, EXPOSE, VOLUME, ENV 等) 将会自动被获取，无需在 docker-compose.yml 中再次设置</p></blockquote><h4 id="build"><a href="#build" class="headerlink" title="build"></a>build</h4><p>指定 Dockerfile 所在文件夹的路径（可以是绝对路径，或者相对 docker-compose.yml 文件的路径）。 Compose 将会利用它自动构建这个镜像，然后使用这个镜像。</p><p>类似于命令行的 docker build .</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3&apos;</span><br><span class="line">services:</span><br><span class="line">  webapp:</span><br><span class="line">    build: .</span><br></pre></td></tr></table></figure><h5 id="context"><a href="#context" class="headerlink" title="context"></a>context</h5><p>指定 Dockerfile 所在文件夹的路径</p><h5 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h5><p>指定 Dockerfile 文件名</p><h5 id="args"><a href="#args" class="headerlink" title="args"></a>args</h5><p>类似Dockerfile 中的 ARG 指令，它可以在构建过程中指定环境变量，但是在构建成功后消失</p><h5 id="context-1"><a href="#context-1" class="headerlink" title="context"></a>context</h5><p>指定 Dockerfile 所在文件夹的路径</p><p>一个build配置的示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3&apos;</span><br><span class="line">services:</span><br><span class="line">  serviceXXX:</span><br><span class="line">    build:</span><br><span class="line">      context: ./config</span><br><span class="line">      dockerfile: My_Dockerfile</span><br><span class="line">      args:</span><br><span class="line">        buildno: 1</span><br><span class="line">        password: secret</span><br><span class="line">        #一般下面这种写法</span><br><span class="line">        - buildno=1</span><br><span class="line">        - password=secret</span><br><span class="line">        #与env不同,arg允许空值</span><br><span class="line">        - buildno</span><br></pre></td></tr></table></figure><h4 id="image"><a href="#image" class="headerlink" title="image"></a>image</h4><p>指定为镜像名称或镜像 ID。如果镜像在本地不存在，Compose 将会尝试拉取这个镜像</p><blockquote><p>如果同时指定了 image和 build，, image 不在具有单独使用它的意义，而是指定了目前要构建的镜像的名称。 也就是说 Compose 构建的镜像则使用 image 中指定的名字webapp:tag命名</p></blockquote><h4 id="command"><a href="#command" class="headerlink" title="command"></a>command</h4><p>使用 command 可以覆盖容器启动后默认执行的命令</p><p><code>command: bundle exec thin -p 3000</code></p><p>也可以写成类似 Dockerfile 中的格式：</p><p><code>command: [bundle, exec, thin, -p, 3000]</code></p><h4 id="depends-on"><a href="#depends-on" class="headerlink" title="depends_on"></a>depends_on</h4><p>解决容器的依赖、启动先后的问题。以下例子中会先启动 redis db 再启动 web</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3&apos;</span><br><span class="line">services:</span><br><span class="line">  web:</span><br><span class="line">    build: .</span><br><span class="line">    depends_on:</span><br><span class="line">      - db</span><br><span class="line">      - redis</span><br><span class="line">  redis:</span><br><span class="line">    image: redis</span><br><span class="line">  db:</span><br><span class="line">    image: postgres</span><br></pre></td></tr></table></figure><blockquote><p>注意：web 服务不会等待redis和db完全启动之后才启动，它是容器启动后就启动，里面的服务有可能还没有起来。</p></blockquote><p>解决办法：<br>一个方面是在连接层面使用自动重连策略，比如mysql jdbc可以有auto reconnect自动重连参数。或者使用下面建议的用一个脚本（wait-for-it.sh）来探测依赖服务已经完全准备好,或者自己编写一个health check脚本来检测依赖服务的健康状况来判断依赖服务是否启动完成。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">wait</span>-for-postgres.sh</span></span><br><span class="line">set -e</span><br><span class="line">host="$1"</span><br><span class="line">shift</span><br><span class="line">cmd="$@"</span><br><span class="line">until psql -h "$host" -U "postgres" -c '\q'; do</span><br><span class="line"><span class="meta">  &gt;</span><span class="bash">&amp;2 <span class="built_in">echo</span> <span class="string">"Postgres is unavailable - sleeping"</span></span></span><br><span class="line">  sleep 1</span><br><span class="line">done</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&amp;2 <span class="built_in">echo</span> <span class="string">"Postgres is up - executing command"</span></span></span><br><span class="line">exec $cmd</span><br></pre></td></tr></table></figure><p>command: [“./wait-for-postgres.sh”, “db”, “python”, “app.py”]<br>注意如果你使用wait-for-it.sh脚本，如果你的基础镜像不包含bash命令（比如alpine镜像）需要安装bash,不然没法执行wait-for-it.sh脚本导致容器启动失败。</p><p>如果Dockerfile的基础镜像用的是alpine相关的基础镜像的话，记得添加如下指令安装bash:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RUN apk update</span><br><span class="line">RUN apk upgrade</span><br><span class="line">RUN apk add --no-cache bash</span><br></pre></td></tr></table></figure><h4 id="environment"><a href="#environment" class="headerlink" title="environment"></a>environment</h4><p>设置环境变量。你可以使用数组或字典两种格式。</p><p>只给定名称的变量会自动获取运行 Compose 主机上对应变量的值，可以用来防止泄露不必要的数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;3.5&apos;</span><br><span class="line">services:</span><br><span class="line">    tomcat_idocv_veiw_rjy:</span><br><span class="line">        image: XXX</span><br><span class="line">        environment:</span><br><span class="line">            - VIRTUAL_HOST=tomcat_idocv_veiw_rjy</span><br><span class="line">            - VIRTUAL_PORT=8080</span><br><span class="line">            - VIRTUAL_NAME=nginx_idocv_veiw_rjy</span><br></pre></td></tr></table></figure><p>YAML中如果变量名称或者值中用到 true|false，yes|no 等表达布尔 含义的词汇，最好放到引号（单双均可）里，避免 YML 自动解析某些内容为对应的布尔语义。这些特定词汇，包括</p><blockquote><p>y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF</p></blockquote><h4 id="expose"><a href="#expose" class="headerlink" title="expose"></a>expose</h4><p>暴露端口，但不映射到宿主机，只被连接的服务访问。</p><p>仅可以指定容器内部的端口为参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">expose:</span><br><span class="line"> - &quot;3000&quot;</span><br><span class="line"> - &quot;8000&quot;</span><br></pre></td></tr></table></figure><h4 id="ports"><a href="#ports" class="headerlink" title="ports"></a>ports</h4><p>暴露端口信息</p><p>使用宿主端口：容器端口 (HOST:CONTAINER) 格式，或者仅仅指定容器的端口（宿主将会随机选择端口）都可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ports:</span><br><span class="line"> - &quot;3000&quot;</span><br><span class="line"> - &quot;8000:8000&quot;</span><br><span class="line"> - &quot;49100:22&quot;</span><br><span class="line"> - &quot;127.0.0.1:8001:8001&quot;</span><br></pre></td></tr></table></figure><blockquote><p>注意：当使用 HOST:CONTAINER 格式来映射端口时，如果你使用的容器端口小于 60 并且没放到引号里，可能会得到错误结果，因为 YAML 会自动解析 xx:yy 这种数字格式为 60 进制。为避免出现这种问题，建议数字串都采用引号包括起来的字符串格式</p></blockquote><h4 id="expose-1"><a href="#expose-1" class="headerlink" title="expose"></a>expose</h4><p>暴露端口，但不映射到宿主机，只被连接的服务访问。暴露给连接的服务，而不暴露给主机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">expose:</span><br><span class="line">    - &quot;3000&quot;</span><br><span class="line">    - &quot;8000&quot;</span><br></pre></td></tr></table></figure><h4 id="env-file"><a href="#env-file" class="headerlink" title="env_file"></a>env_file</h4><p>从文件中获取环境变量，可以指定一个文件路径或路径列表，其优先级低于 environment 指定的环境变量<br>如果在配置文件中有build操作，变量并不会进入构建过程中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">env_file: .env</span><br><span class="line">---------------</span><br><span class="line">env_file:</span><br><span class="line">    - ./common.env</span><br></pre></td></tr></table></figure><h4 id="links"><a href="#links" class="headerlink" title="links"></a>links</h4><p>将指定容器连接到当前连接，可以设置别名，避免ip方式导致的容器重启动态改变的无法连接情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">links:    # 指定服务名称:别名 </span><br><span class="line">    - docker-compose-eureka-server:compose-eureka</span><br></pre></td></tr></table></figure><h4 id="volumes卷挂载路径"><a href="#volumes卷挂载路径" class="headerlink" title="volumes卷挂载路径"></a>volumes卷挂载路径</h4><p>设置网络模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">volumes:</span><br><span class="line">  - /lib</span><br><span class="line">  - /var</span><br></pre></td></tr></table></figure><h4 id="dns"><a href="#dns" class="headerlink" title="dns"></a>dns</h4><p>配置 dns 服务器，可以是一个值或列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dns: 8.8.8.8</span><br><span class="line">------------</span><br><span class="line">dns:</span><br><span class="line">    - 8.8.8.8</span><br><span class="line">    - 9.9.9.9</span><br></pre></td></tr></table></figure><h4 id="extra-hosts"><a href="#extra-hosts" class="headerlink" title="extra_hosts"></a>extra_hosts</h4><p>添加主机名的标签，会在/etc/hosts文件中添加一些记录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">extra_hosts:</span><br><span class="line"> - &quot;somehost:162.242.195.82&quot;</span><br><span class="line"> - &quot;otherhost:50.31.209.229&quot;</span><br></pre></td></tr></table></figure><h4 id="volumes-from"><a href="#volumes-from" class="headerlink" title="volumes_from"></a>volumes_from</h4><p>从另一个服务或容器挂载其数据卷</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">volumes_from:</span><br><span class="line">   - service_name    </span><br><span class="line">     - container_name</span><br></pre></td></tr></table></figure><h4 id="entrypoint"><a href="#entrypoint" class="headerlink" title="entrypoint"></a>entrypoint</h4><p>在Dockerfile中有一个指令叫做ENTRYPOINT指令，用于指定接入点。<br>在docker-compose.yml中可以定义接入点，覆盖Dockerfile中的定义：<br>entrypoint: /code/entrypoint.sh</p><h4 id="cap-add"><a href="#cap-add" class="headerlink" title="cap_add"></a>cap_add</h4><p>增加指定容器的内核能力（capacity）。<br>让容器具有所有能力可以指定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cap_add:</span><br><span class="line">    - ALL</span><br></pre></td></tr></table></figure><h4 id="cap-drop"><a href="#cap-drop" class="headerlink" title="cap_drop"></a>cap_drop</h4><p>去掉指定容器的内核能力（capacity）。<br>去掉NET_ADMIN能力可以指定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cap_drop:</span><br><span class="line">    - NET_ADMIN</span><br></pre></td></tr></table></figure><h4 id="cgroup-parent"><a href="#cgroup-parent" class="headerlink" title="cgroup_parent"></a>cgroup_parent</h4><p>创建了一个cgroup组名称为cgroups_1:<br>cgroup_parent: cgroups_1</p><h4 id="devices"><a href="#devices" class="headerlink" title="devices"></a>devices</h4><p>指定设备映射关系，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">devices:</span><br><span class="line">    - &quot;/dev/ttyUSB1:/dev/ttyUSB0&quot;</span><br></pre></td></tr></table></figure><h4 id="extends"><a href="#extends" class="headerlink" title="extends"></a>extends</h4><p>基于其它模板文件进行扩展。例如，对于webapp服务定义了一个基础模板文件为common.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># common.yml</span><br><span class="line">webapp:</span><br><span class="line">    build: ./webapp</span><br><span class="line">    environment:</span><br><span class="line">        - DEBUG=false</span><br><span class="line">        - SEND_EMAILS=false</span><br></pre></td></tr></table></figure><p>再编写一个新的development.yml文件，使用common.yml中的webapp服务进行扩展</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># development.yml</span><br><span class="line">web:</span><br><span class="line">    extends:</span><br><span class="line">        file: common.yml</span><br><span class="line">        service: webapp</span><br><span class="line">    ports:</span><br><span class="line">        - &quot;8000:8000&quot;</span><br><span class="line">    links:</span><br><span class="line">        - db</span><br><span class="line">    environment:</span><br><span class="line">        - DEBUG=true</span><br><span class="line">db:</span><br><span class="line">    image: mysql</span><br></pre></td></tr></table></figure><p>后者会自动继承common.yml中的webapp服务及环境变量定义。<br>extends限制如下：<br>A、要避免出现循环依赖<br>B、extends不会继承links和volumes_from中定义的容器和数据卷资源<br>推荐在基础模板中只定义一些可以共享的镜像和环境变量，在扩展模板中具体指定应用变量、链接、数据卷等信息</p><h4 id="external-links"><a href="#external-links" class="headerlink" title="external_links"></a>external_links</h4><p>链接到docker-compose.yml外部的容器，可以是非Compose管理的外部容器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">external_links:</span><br><span class="line">    - redis_1</span><br><span class="line">    - project_db_1:mysql</span><br><span class="line">    - project_db_1:postgresql</span><br></pre></td></tr></table></figure><h4 id="labels-1"><a href="#labels-1" class="headerlink" title="labels"></a>labels</h4><p>为容器添加Docker元数据（metadata）信息。例如可以为容器添加辅助说明信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">labels：</span><br><span class="line">    com.startupteam.description: &quot;webapp for a strtup team&quot;</span><br></pre></td></tr></table></figure><h4 id="log-driver"><a href="#log-driver" class="headerlink" title="log_driver"></a>log_driver</h4><p>指定日志驱动类型。目前支持三种日志驱动类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">log_driver: &quot;json-file&quot;</span><br><span class="line">log_driver: &quot;syslog&quot;</span><br><span class="line">log_driver: &quot;none&quot;</span><br></pre></td></tr></table></figure><h4 id="log-opt"><a href="#log-opt" class="headerlink" title="log_opt"></a>log_opt</h4><p>日志驱动的相关参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">log_driver: &quot;syslog&quot;log_opt: </span><br><span class="line">    syslog-address: &quot;tcp://192.168.0.42:123&quot;</span><br></pre></td></tr></table></figure><h4 id="network-mode"><a href="#network-mode" class="headerlink" title="network_mode"></a>network_mode</h4><p>设置网络模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">network_mode: &quot;bridge&quot;</span><br><span class="line">network_mode: &quot;host&quot;</span><br><span class="line">network_mode: &quot;none&quot;</span><br><span class="line">network_mode: &quot;service:[service name]&quot;</span><br><span class="line">network_mode: &quot;container:[container name/id]&quot;</span><br></pre></td></tr></table></figure><h4 id="net"><a href="#net" class="headerlink" title="net"></a>net</h4><p>设置网络模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net: &quot;bridge&quot;</span><br><span class="line">net: &quot;none&quot;</span><br><span class="line">net: &quot;host&quot;</span><br></pre></td></tr></table></figure><h4 id="security-opt"><a href="#security-opt" class="headerlink" title="security_opt"></a>security_opt</h4><p>指定容器模板标签（label）机制的默认属性（用户、角色、类型、级别等）。例如，配置标签的用户名和角色名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">security_opt:</span><br><span class="line">    - label:user:USER</span><br><span class="line">    - label:role:ROLE</span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><p>环境变量可以用来配置Docker-Compose的行为。<br>COMPOSE_PROJECT_NAME<br>设置通过Compose启动的每一个容器前添加的项目名称，默认是当前工作目录的名字。<br>COMPOSE_FILE<br>设置docker-compose.yml模板文件的路径。默认路径是当前工作目录。<br>DOCKER_HOST<br>设置Docker daemon的地址。默认使用unix:///var/run/docker.sock。 DOCKER_TLS_VERIFY<br>如果设置不为空，则与Docker daemon交互通过TLS进行。<br>DOCKER_CERT_PATH<br>配置TLS通信所需要的验证(ca.pem、cert.pem 和 key.pem)文件的路径，默认是 ~/.docker </p><p>指令部分整理自以下网友，感谢</p><p><a href="https://www.jianshu.com/p/ba77c7bdf03e" target="_blank" rel="noopener">https://www.jianshu.com/p/ba77c7bdf03e</a></p><p><a href="https://www.jianshu.com/p/7d1fe36ba45c" target="_blank" rel="noopener">https://www.jianshu.com/p/7d1fe36ba45c</a></p><p><a href="https://blog.51cto.com/9291927/2310444" target="_blank" rel="noopener">https://blog.51cto.com/9291927/2310444</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;固定容器&quot;&gt;&lt;a href=&quot;#固定容器&quot; class=&quot;headerlink&quot; title=&quot;固定容器&quot;&gt;&lt;/a&gt;固定容器&lt;/h2&gt;&lt;p&gt;compose会查找之前的容器，把旧容器的volume-data拷贝到容器中。除非手动用docker rm命令删除容器，否则CONTAINER ID不会发生改变。 &lt;/p&gt;
&lt;h2 id=&quot;版本&quot;&gt;&lt;a href=&quot;#版本&quot; class=&quot;headerlink&quot; title=&quot;版本&quot;&gt;&lt;/a&gt;版本&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Compose file format&lt;/th&gt;
&lt;th&gt;Docker Engine&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1.9.0+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.0&lt;/td&gt;
&lt;td&gt;1.10.0+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.1&lt;/td&gt;
&lt;td&gt;1.12.0+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.2, 3.0, 3.1, 3.2&lt;/td&gt;
&lt;td&gt;1.13.0+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.3, 3.3, 3.4, 3.5&lt;/td&gt;
&lt;td&gt;17.06.0+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.4&lt;/td&gt;
&lt;td&gt;17.12.0+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.6&lt;/td&gt;
&lt;td&gt;18.02.0+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.7&lt;/td&gt;
&lt;td&gt;18.06.0+&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
    
    </summary>
    
      <category term="docker" scheme="http://lizhuangs.github.io/categories/docker/"/>
    
      <category term="docker-compose" scheme="http://lizhuangs.github.io/categories/docker/docker-compose/"/>
    
    
      <category term="docker" scheme="http://lizhuangs.github.io/tags/docker/"/>
    
      <category term="docker-compose" scheme="http://lizhuangs.github.io/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>nfs安装</title>
    <link href="http://lizhuangs.github.io/2019/05/12/nfs%E5%AE%89%E8%A3%85/"/>
    <id>http://lizhuangs.github.io/2019/05/12/nfs安装/</id>
    <published>2019-05-12T09:23:06.000Z</published>
    <updated>2019-05-18T08:52:01.556Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h1><h2 id="redhat-amp-centos"><a href="#redhat-amp-centos" class="headerlink" title="redhat &amp;　centos"></a>redhat &amp;　centos</h2><p>服务端<br><code>yum install -y nfs-utils rpcbind</code></p><h2 id="ubuntu-amp-debian-amp-deepin"><a href="#ubuntu-amp-debian-amp-deepin" class="headerlink" title="ubuntu &amp; debian &amp; deepin"></a>ubuntu &amp; debian &amp; deepin</h2><p>搜索nfs-开头的软件<br><code>apt-cache search nfs-</code></p><p>服务端<br><code>apt install nfs-kernel-server</code></p><a id="more"></a><h2 id="共享目录"><a href="#共享目录" class="headerlink" title="共享目录"></a>共享目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/nfs/share</span><br><span class="line">sudo chmod 666 /data/nfs/share</span><br></pre></td></tr></table></figure><h2 id="NFS配置文件"><a href="#NFS配置文件" class="headerlink" title="NFS配置文件"></a>NFS配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/exports</span><br><span class="line">/data/nfs/share 192.168.45.0/24(rw,sync,insecure,no_subtree_check,no_root_squash)</span><br><span class="line">/data/nfs/share 192.168.20.0/24(rw,sync,insecure,no_subtree_check,no_root_squash)</span><br></pre></td></tr></table></figure><p>格式： 共享目录 客户机ip 共享方式(ro,rw) ro:只读 rw:读写 sync:同步 async:异步（默认）</p><p>/share <em>(ro, sync) # ‘</em>’表示所有ip<br>/share 192.168.2.250(rw, sync) </p><p>deepin linux:<br>(rw,sync,no_root_squash,no_subtree_check)</p><h2 id="启动-RPC-服务"><a href="#启动-RPC-服务" class="headerlink" title="启动 RPC 服务"></a>启动 RPC 服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service rpcbind start</span><br><span class="line">或</span><br><span class="line">/bin/systemctl start rpcbind.service</span><br></pre></td></tr></table></figure><p>查看 NFS 服务项 rpc 服务器注册的端口列表，有些系统需要sudo</p><p>sudo rpcinfo -p localhost</p><p>或</p><p>sudo rpcinfo -p localhost | grep nfs</p><h2 id="启动-NFS-服务"><a href="#启动-NFS-服务" class="headerlink" title="启动 NFS 服务"></a>启动 NFS 服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo service nfs-server start</span><br><span class="line">或</span><br><span class="line">sudo /bin/systemctl start nfs-server.service</span><br></pre></td></tr></table></figure><p>再查看一下rpcinfo -p localhost，可以看到有nfs了。</p><p>如何知道nfs service名字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo service --status-all | grep nfs</span><br><span class="line">结果：</span><br><span class="line"> [ - ]  nfs-common</span><br><span class="line"> [ + ]  nfs-kernel-server</span><br><span class="line"> 也可以</span><br><span class="line"> <span class="built_in">cd</span> /lib/systemd/system/</span><br><span class="line"> ll |grep nfs</span><br><span class="line"> 结果：</span><br><span class="line"> nfs-kernel-server.service -&gt; nfs-server.service</span><br><span class="line"> nfs-server.service</span><br></pre></td></tr></table></figure><p> 也就是说 nfs-kernel-server也可以，简写就是nfs-server。</p><h2 id="检查NFS配置"><a href="#检查NFS配置" class="headerlink" title="检查NFS配置"></a>检查NFS配置</h2><blockquote><p>showmount -e localhost</p></blockquote><p> 如果列表为空，说明nfs配置有问题。<br> showmount表示查看目标地址的共享目录，下面客户端的时候，后面的地址就是服务端IP了。</p><p> 修改后重新加载配置文件：</p><blockquote><p>sudo exportfs -rv</p></blockquote><p>当然修改后，你也可以重启nfs服务</p><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo chkconfig rpcbind on</span><br><span class="line">sudo chkconfig nfs-server on</span><br><span class="line">或</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> rpcbind</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nfs-server</span><br></pre></td></tr></table></figure><p>查看服务是否开机启动,支掉-a只显示active<br>sudo systemctl -la |grep rpc<br>sudo systemctl -la |grep nfs-</p><h1 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h1><p>一般服务端安装完了，本地就有客户端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nfs-common</span><br><span class="line">或</span><br><span class="line">sudo yum install -y nfs-utils</span><br></pre></td></tr></table></figure><h2 id="查看目标地址共享目录"><a href="#查看目标地址共享目录" class="headerlink" title="查看目标地址共享目录"></a>查看目标地址共享目录</h2><blockquote><p>showmount -e 192.168.20.110</p></blockquote><blockquote><p>showmount -e 192.168.45.168</p></blockquote><p>确认自身是否在允许的列表中<br>可使用ifconfig查看自身ip信息，确保自身的ip在允许的列表中</p><p>创建挂载点<br>使用mkdir命令创建一个共享目录的挂载点，如果已经有挂载点，可省略此步骤。</p><p>本次创建挂载点命令为<br><code>mkdir -p /data/nfs/client</code></p><h2 id="挂载NFS服务器共享目录到本地"><a href="#挂载NFS服务器共享目录到本地" class="headerlink" title="挂载NFS服务器共享目录到本地"></a>挂载NFS服务器共享目录到本地</h2><p>sudo mount -t nfs 192.168.20.110:/data/nfs/share /data/nfs/client</p><p>如果服务端共享的是/data/nfs/share目录，那么可以直接挂载它下面的子目录，它会自动创建，例如AAA：<br>sudo mount -t nfs 192.168.20.110:/data/nfs/share/AAA /data/nfs/client</p><p>为了提高NFS的稳定性，使用TCP协议挂载，NFS默认用UDP协议<br>sudo mount -t nfs 192.168.20.110:/data/nfs/share /data/nfs/client -o proto=tcp -o nolock</p><p>卸载 NFS 挂载<br>sudo umount /data/nfs/client</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>查看目录挂载<br>df -h</p><p>服务端执行<br>sudo touch /data/nfs/share/test<br>vim /data/nfs/share/test<br>‘Welcome to NFS server’  </p><p>注意以下这种没有成功，因为share目录无法进入，权限是666，但是可以通过vi使用。</p><p>#sudo echo ‘Welcome to NFS server’ &gt; /data/nfs/share/test</p><p>在客户端验证并写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /data/nfs/client/<span class="built_in">test</span></span><br><span class="line">Welcome to NFS server</span><br><span class="line">come from client</span><br></pre></td></tr></table></figure><p>服务端验证<br>vim /data/nfs/share/test</p><h2 id="实现开机自动挂载"><a href="#实现开机自动挂载" class="headerlink" title="实现开机自动挂载"></a>实现开机自动挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/fstab  </span><br><span class="line">192.168.20.110:/data/nfs/share /data/nfs/client nfs defaults 0 0</span><br><span class="line"><span class="comment">#192.168.1.3:/nfs_test /mnt/test1 nfs rw,tcp,intr 0 1</span></span><br></pre></td></tr></table></figure><h2 id="固定nfs服务端口"><a href="#固定nfs服务端口" class="headerlink" title="固定nfs服务端口"></a>固定nfs服务端口</h2><p>NFS启动时会随机启动多个端口并向RPC注册，这样如果使用iptables对NFS端口进行限制就会有点麻烦，可以更改配置文件固定NFS服务相关端口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/nfs</span><br><span class="line">RQUOTAD_PORT=30001</span><br><span class="line">LOCKD_TCPPORT=30002</span><br><span class="line">LOCKD_UDPPORT=30002</span><br><span class="line">MOUNTD_PORT=30003</span><br><span class="line">STATD_PORT=30004</span><br></pre></td></tr></table></figure><p>重启<br>service nfs-server restart</p><p>查看结果<br>rpcinfo -p localhost</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;服务端&quot;&gt;&lt;a href=&quot;#服务端&quot; class=&quot;headerlink&quot; title=&quot;服务端&quot;&gt;&lt;/a&gt;服务端&lt;/h1&gt;&lt;h2 id=&quot;redhat-amp-centos&quot;&gt;&lt;a href=&quot;#redhat-amp-centos&quot; class=&quot;headerlink&quot; title=&quot;redhat &amp;amp;　centos&quot;&gt;&lt;/a&gt;redhat &amp;amp;　centos&lt;/h2&gt;&lt;p&gt;服务端&lt;br&gt;&lt;code&gt;yum install -y nfs-utils rpcbind&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;ubuntu-amp-debian-amp-deepin&quot;&gt;&lt;a href=&quot;#ubuntu-amp-debian-amp-deepin&quot; class=&quot;headerlink&quot; title=&quot;ubuntu &amp;amp; debian &amp;amp; deepin&quot;&gt;&lt;/a&gt;ubuntu &amp;amp; debian &amp;amp; deepin&lt;/h2&gt;&lt;p&gt;搜索nfs-开头的软件&lt;br&gt;&lt;code&gt;apt-cache search nfs-&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;服务端&lt;br&gt;&lt;code&gt;apt install nfs-kernel-server&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://lizhuangs.github.io/categories/linux/"/>
    
      <category term="nfs" scheme="http://lizhuangs.github.io/categories/linux/nfs/"/>
    
    
      <category term="linux" scheme="http://lizhuangs.github.io/tags/linux/"/>
    
      <category term="nfs" scheme="http://lizhuangs.github.io/tags/nfs/"/>
    
  </entry>
  
  <entry>
    <title>markdown示例</title>
    <link href="http://lizhuangs.github.io/2019/05/11/markdown%E7%A4%BA%E4%BE%8B/"/>
    <id>http://lizhuangs.github.io/2019/05/11/markdown示例/</id>
    <published>2019-05-11T14:55:41.000Z</published>
    <updated>2019-05-18T16:33:37.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件推荐"><a href="#软件推荐" class="headerlink" title="软件推荐"></a>软件推荐</h2><p>工欲善其事，必先利其器。</p><div class="note info">            <p>编写markdown推荐使用vsc（安装markdown preview enhanced更佳）或者Typora软件，当然有道云笔记也不错哦~（当前文章就是从有道云复制共享出来）</p><p>目前osc、简书、csdn等都支持markdown。markdown的语法简洁，文档备份方便，是写博客的首选。</p>          </div><p><strong>缺点</strong> 表格和插图，图片存储位置在很多软件上面不统一，尤其是在线编辑器，markdown代码很容易复制过去，嗯，除非图片都保存在一个统一的云端(<code>PicGo</code>图床上传工具你值得拥有)。</p><a id="more"></a><hr><p>目录示例</p><p>[TOC]</p><p>目录使用[TOC]就可以生成带有层级的目录了，但是它貌似不是标准的markdown写法，很遗憾hexo和github就不支持。</p><ul><li>github生成目录，可以使用vsc的markdown preview enhanced插件</li><li>hexo侧边自带文章目录，所以就不折腾了，不信你瞧一眼</li></ul><hr><h2 id="标题示例"><a href="#标题示例" class="headerlink" title="标题示例"></a>标题示例</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题 \"></a>三级标题 \</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题 \"></a>四级标题 \</h4><p>总共6级标题 ，一个#表示1级，注意上面的TOC目录是根据标题等级生成层级关系的</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题 ===="></a>一级标题 ====</h1><h2 id="二级标题-—"><a href="#二级标题-—" class="headerlink" title="二级标题 —-"></a>二级标题 —-</h2><p>这种写法的一二级标题等同于上面的一二级标题，但是很多解析器toc目录会忽略，基本不用</p><hr><h2 id="字体效果"><a href="#字体效果" class="headerlink" title="字体效果"></a>字体效果</h2><p><em>斜体</em> ：*斜体*或_斜体_</p><p><strong>加粗</strong> ：**加粗**</p><p><strong><em>加粗</em></strong> ：***斜体加粗***</p><p><del>删除线</del> ：~~删除线~~</p><p><u>下划线</u> ：&lt;u&gt;下划线&lt;/u&gt;</p><p>高亮字体：==高亮字体==</p><p><font face="微软雅黑">我是微软雅黑字</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑字&lt;/font&gt;</span><br></pre></td></tr></table></figure><p><font color="#A52A2A" size="4">字体加大变色</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;font color=#A52A2A size=4 &gt;字体加大变色&lt;/font&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>==<strong>列表结尾最好有空行。多个列表连续时中间空2行。</strong>==</p><h3 id="无序列表（-开头后面加空格）"><a href="#无序列表（-开头后面加空格）" class="headerlink" title="无序列表（*+-开头后面加空格）"></a>无序列表（*+-开头后面加空格）</h3><ul><li>星号开头</li></ul><ul><li>加号开头</li></ul><ul><li>减号开头</li></ul><h3 id="有序列表（数字-英文句号-空格）"><a href="#有序列表（数字-英文句号-空格）" class="headerlink" title="有序列表（数字+英文句号+空格）"></a>有序列表（数字+英文句号+空格）</h3><p>我数字后没有跟空格，看起来像其实不是有序列表<br>1.有序列表<br>2.有序列表<br>3.有序列表</p><p>我是有序列表，在有些编辑器列表会和上面的列表数字连起来。<br>出现这种问题，可以将此行前面加一个空格缩进。</p><ol><li>有序列表</li><li>有序列表</li><li>有序列表</li></ol><h3 id="无序嵌套无序，二级前面2个空格"><a href="#无序嵌套无序，二级前面2个空格" class="headerlink" title="无序嵌套无序，二级前面2个空格"></a>无序嵌套无序，二级前面2个空格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 一级</span><br><span class="line">  - 二级</span><br><span class="line">- 一级</span><br><span class="line">  - 二级</span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li>一级<ul><li>二级</li></ul></li><li>一级<ul><li>二级</li></ul></li></ul><h3 id="有序嵌套无序，二级前面4个空格"><a href="#有序嵌套无序，二级前面4个空格" class="headerlink" title="有序嵌套无序，二级前面4个空格"></a>有序嵌套无序，二级前面4个空格</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 第一项：</span><br><span class="line">    - 第一项嵌套的第一个元素</span><br><span class="line">    - 第一项嵌套的第二个元素</span><br><span class="line">2. 第二项：</span><br><span class="line">    - 第二项嵌套的第一个元素</span><br><span class="line">    - 第二项嵌套的第一个元素</span><br></pre></td></tr></table></figure><p>效果如下：</p><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第一个元素</li></ul></li></ol><h3 id="无序-无序-有序实现三级列表"><a href="#无序-无序-有序实现三级列表" class="headerlink" title="无序++无序+有序实现三级列表"></a>无序++无序+有序实现三级列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+ 一级1</span><br><span class="line">  - 二级1.1</span><br><span class="line">  - 二级1.2</span><br><span class="line">    1. 三级1.2.1</span><br><span class="line">    2. 三级1.2.2</span><br><span class="line">  - 二级1.3</span><br><span class="line">+ 一级2</span><br></pre></td></tr></table></figure><p>效果如下：</p><ul><li>一级1<ul><li>二级1.1</li><li>二级1.2<ol><li>三级1.2.1</li><li>三级1.2.2</li></ol></li><li>二级1.3</li></ul></li><li>一级2</li></ul><hr><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>方法1: 连续两个以上空格+回车<br>方法2：使用html语言&lt;br/&gt;</p><hr><h2 id="水平线"><a href="#水平线" class="headerlink" title="水平线"></a>水平线</h2><p>3个连续*或-或_</p><p><strong>注意：超过3个-是二级标题，不过有时候不生效</strong></p><hr><h2 id="背景色"><a href="#背景色" class="headerlink" title="背景色"></a>背景色</h2><p>Markdown本身不支持背景色设置，借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色的功能(简书，有道云笔记本等不支持)。举例如下：</p><table><tr><td bgcolor="green">背景色是：green</td></tr></table><p>注意：html代码块后面要换行，否则在vscode中会有问题。</p><hr><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><h3 id="行内代码块"><a href="#行内代码块" class="headerlink" title="行内代码块"></a>行内代码块</h3><p>代码块（和引用效果很像）：</p><pre><code>一个tab或4个英文空格就是代码块，但是前面要空一行。我是引用。</code></pre><p>行内代码块，用`括起来：<br>示例：<br>`代码块`<br>结果：<br><code>代码块</code></p><h3 id="块状代码块"><a href="#块状代码块" class="headerlink" title="块状代码块"></a>块状代码块</h3><p>块状代码块用以3个`符号开始和结束的，并且开始和结束单独一行</p><p>示例<br>&lt;!–￼5–&gt;</p><p>效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;xml&gt;我是代码块&lt;/xml&gt;</span><br><span class="line">&lt;xml&gt;我是代码块&lt;/xml&gt;</span><br></pre></td></tr></table></figure><hr><h3 id="高亮代码块"><a href="#高亮代码块" class="headerlink" title="高亮代码块"></a>高亮代码块</h3><p>高亮代码块是在开始的3个`后添加具体的语言</p><p>&lt;!–￼7–&gt;</p><p>效果：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">xml</span>&gt;</span>高亮代码块<span class="tag">&lt;/<span class="name">xml</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><h3 id="普通引用"><a href="#普通引用" class="headerlink" title="普通引用"></a>普通引用</h3><p>引用就是在段落前面添加&gt;<br>示例<br>&gt;引用<br>&gt;引用<br>结果</p><blockquote><p>引用<br>引用</p></blockquote><h3 id="嵌套引用"><a href="#嵌套引用" class="headerlink" title="嵌套引用"></a>嵌套引用</h3><p>当前层数递增，则层层断开嵌套<br>当前层小于等于上一层，则两层平级  </p><p>&gt;1层<br>&gt;&gt;2层<br>&gt;&gt;&gt;3层<br>&gt;当前层小于等于上一层，则平级<br>&gt;&gt;2个&gt;<br>&gt;&gt;&gt;3个&gt;当前层大于上一层<br>&gt;&gt;&gt;&gt;4个&gt;<br>&gt;1个&gt;当前层小于等于上一层<br>&gt;&gt;&gt;&gt;&gt;&gt;&gt;7个&gt;断层，因为当前层大于上一层<br>效果:  </p><blockquote><p>1层</p><blockquote><p>2层</p><blockquote><p>3层<br>当前层小于等于上一层，则平级<br>2个&gt;<br>3个&gt;当前层大于上一层</p><blockquote><p>4个&gt;<br>1个当前层小于等于上一层</p><blockquote><blockquote><blockquote><p>7个&gt;断层，因为当前层大于上一层<br>注意，层的最后一行要空行，不然你会看到这句话也在层里面。同样的问题也出现在列表上。</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><p>经验：在使用引用和列表的时候，结尾最好空2行为好。</p><hr><h2 id="待办事项"><a href="#待办事项" class="headerlink" title="待办事项"></a>待办事项</h2><p>- [x] 已完成  </p><p>- [ ] 未完成  </p><p>效果：  </p><ul><li><input checked disabled type="checkbox"> 已完成</li><li><input disabled type="checkbox"> 未完成<ul><li><input checked disabled type="checkbox"> 日志研究</li><li><input disabled type="checkbox"> 路由</li><li><input disabled type="checkbox"> Rxjs<br>待办事项后面要换行，否则下面一行的文字会变成待办事项。比如这一行。</li></ul></li></ul><p>hexo不支持todolist，需要安装插件，目前插件和目录有冲突</p><hr><h2 id="图片插入"><a href="#图片插入" class="headerlink" title="图片插入"></a>图片插入</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片示例](https://note.youdao.com/favicon.ico)</span><br></pre></td></tr></table></figure><p>效果<br><img src="https://note.youdao.com/favicon.ico" alt="图片示例"></p><p>在 markdown 直接使用提供的语法引入图片是无法设置大小的，所以我们需要用到 html 的 img 标签。<br><code>&lt;img width=&quot;  &quot; alt=&quot;描述&quot; src=&quot;url&quot;/&gt;</code><br>在 markdown 设置图片居中是需要通过 div 来控制的。<br><code>&lt;div align=center&gt;&lt;img width=&quot;267px&quot; alt=&quot;&quot; src=&quot;xx&quot;/&gt;&lt;/div&gt;</code></p><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>| 列1 | 列3 | 列3 |  </p><p>| :— | :–: | —: |  </p><p>| 左对齐 | 居中对齐 | 右对齐 |  </p><table><thead><tr><th align="left">列1</th><th align="center">列3</th><th align="right">列3</th></tr></thead><tbody><tr><td align="left">左对齐</td><td align="center">居中对齐</td><td align="right">右对齐</td></tr><tr><td align="left">第二行中的字符:在左面左对齐，在两边居中对齐，在右面右对齐，没有:默认左对齐。</td><td align="center"></td><td align="right"></td></tr></tbody></table><h3 id="表格在线转换"><a href="#表格在线转换" class="headerlink" title="表格在线转换"></a>表格在线转换</h3><p><a href="https://tableconvert.com/" target="_blank" rel="noopener">tableconvert</a></p><p>右上角导入html，点确定可以直接生成markdown</p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[有道](https://note.youdao.com/ &quot;鼠标移上来的提示，可以省略&quot;)</span><br></pre></td></tr></table></figure><p>效果<br><a href="https://note.youdao.com/" title="鼠标移上来的提示，可以省略" target="_blank" rel="noopener">有道</a></p><h2 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h2><p>-&gt; 直线，–&gt;虚线，-&gt;&gt;实线箭头<br>各软件写法目前不统一。建议直接看源码吧。<br><a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">markdown图</a><br><a href="https://jingyan.baidu.com/article/48b558e3035d9a7f38c09aeb.html" target="_blank" rel="noopener">示例地址</a></p><p>typora和vscode使用<a href="https://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="noopener">js-sequence</a>实现，<a href="https://support.typora.io/Draw-Diagrams-With-Markdown/" target="_blank" rel="noopener">typora官方说明</a>：显示如下：</p><p>简单示例：</p><div id="sequence-0"></div><p>复杂示例</p><div id="sequence-1"></div>以上代码在vscode可以切换主题：`sequence {theme='hand'}`<p>有道云写法很特殊：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">客户端-&gt;&gt;用户中心: 获取token，login(uname,pwd)</span><br><span class="line">用户中心-&gt;&gt;客户端: 返回token</span><br><span class="line">客户端-&gt;&gt;SDK: 调带接口，携带token</span><br><span class="line">SDK-&gt;&gt;用户中心: 检验token</span><br><span class="line">用户中心-&gt;&gt;SDK: 返回token检验结果</span><br><span class="line">SDK-&gt;&gt;客户端: token成功或失败返回相应处理结果</span><br></pre></td></tr></table></figure><hr><h2 id="Emoji"><a href="#Emoji" class="headerlink" title="Emoji"></a>Emoji</h2><p><a href="http://emojihomepage.com/" target="_blank" rel="noopener">从这里直接点一下就复制了</a><br>或者使用:表情:，表情二字换成smile</p><p>😄:smile:</p><hr><h2 id="特殊符号处理"><a href="#特殊符号处理" class="headerlink" title="特殊符号处理"></a>特殊符号处理</h2><p>Markdown使用反斜杠\插入语法中用到的特殊符号。在Markdown中，主要有以下几种特殊符号需要处理：</p><p>\   反斜线<br>`   反引号</p><ul><li>星号<br>_   底线<br>{}  花括号<br>[]  方括号<br>()  括弧<h1 id="井字号"><a href="#井字号" class="headerlink" title="井字号"></a>井字号</h1></li></ul><ul><li>加号</li></ul><ul><li>减号<br>.   英文句点<br>!   惊叹号<br>例如，如果你需要插入反斜杠，就连续输入两个反斜杠即可：\ \ =&gt; \ 。</li></ul><p>注：在内容中输入以上特殊符号的时候一定要注意转义，否则将导致内容显示不全，甚至排版混乱。</p><hr><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><div class="note danger">            <p>在hexo中note和tabs标签需要开启才可以使用 </p>          </div><h3 id="note"><a href="#note" class="headerlink" title="note"></a>note</h3><p>note为hexo的插件，普通markdown并不支持<br>格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note class_name %&#125;</span><br><span class="line">现在该说点什么呢</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>class_name有6个值：default，primary，success，info，warning，danger</p><p>效果如下</p><div class="note ">            <p>现在该说点什么呢，我没有class_name </p>          </div><div class="note default">            <p>现在该说点什么呢 default </p>          </div><div class="note primary">            <p>现在该说点什么呢 primary </p>          </div><div class="note success">            <p>现在该说点什么呢 success </p>          </div><div class="note info">            <p>现在该说点什么呢 info </p>          </div><div class="note warning">            <p>现在该说点什么呢 warning </p>          </div><div class="note danger">            <p>现在该说点什么呢 danger </p>          </div><h3 id="tabs"><a href="#tabs" class="headerlink" title="tabs"></a>tabs</h3><div class="tabs" id><ul class="nav-tabs"><li class="tab active"><a href="#-1"><i class="fa fa-heart"></i>first tab</a></li><li class="tab"><a href="#-2">second tab</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><p> first</p></div><div class="tab-pane" id="-2"><p> second</p></div></div></div><h3 id="文本居中的引用"><a href="#文本居中的引用" class="headerlink" title="文本居中的引用"></a>文本居中的引用</h3><p>源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% cq %&#125;</span><br><span class="line">很拽的土豆说：情不知所起、一往而深 </span><br><span class="line">&#123;% endcq %&#125;</span><br></pre></td></tr></table></figure><p>效果</p><blockquote class="blockquote-center"><p>很拽的土豆说：情不知所起、一往而深 </p></blockquote><p>使用font包起来，可以改变字体大小<br><font size="40"></font></p><blockquote class="blockquote-center"><p>很拽的土豆说：情不知所起、一往而深 </p></blockquote><hr><script src="https://cdn.bootcss.com/webfont/1.6.28/webfontloader.js"></script><script src="https://cdn.bootcss.com/raphael/2.2.8/raphael.min.js"></script><script src="https://cdn.bootcss.com/snap.svg/0.5.1/snap.svg-min.js"></script><script src="https://cdn.bootcss.com/underscore.js/1.9.1/underscore-min.js"></script><script src="https://cdn.bootcss.com/js-sequence-diagrams/1.0.6/sequence-diagram-min.js"></script><textarea id="sequence-0-code" style="display: none">Alice->Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob-->Alice: I am good thanks!</textarea><textarea id="sequence-0-options" style="display: none">{"theme":"simple"}</textarea><script>  var code = document.getElementById("sequence-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("sequence-0-options").value));  var diagram = Diagram.parse(code);  diagram.drawSVG("sequence-0", options);</script><textarea id="sequence-1-code" style="display: none">Note right of 客户端: 客户端的描述Note left of 用户中心: 用户中心的描述Note right of SDK: SDK的描述客户端->用户中心: 获取token，login(uname,pwd)用户中心-->>客户端: 返回token客户端->SDK: 调带接口，携带tokenSDK->用户中心: 检验token用户中心-->>SDK: 返回token检验结果SDK-->>客户端: token成功或失败返回相应处理结果</textarea><textarea id="sequence-1-options" style="display: none">{"theme":"simple"}</textarea><script>  var code = document.getElementById("sequence-1-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("sequence-1-options").value));  var diagram = Diagram.parse(code);  diagram.drawSVG("sequence-1", options);</script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;软件推荐&quot;&gt;&lt;a href=&quot;#软件推荐&quot; class=&quot;headerlink&quot; title=&quot;软件推荐&quot;&gt;&lt;/a&gt;软件推荐&lt;/h2&gt;&lt;p&gt;工欲善其事，必先利其器。&lt;/p&gt;
&lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;编写markdown推荐使用vsc（安装markdown preview enhanced更佳）或者Typora软件，当然有道云笔记也不错哦~（当前文章就是从有道云复制共享出来）&lt;/p&gt;&lt;p&gt;目前osc、简书、csdn等都支持markdown。markdown的语法简洁，文档备份方便，是写博客的首选。&lt;/p&gt;
          &lt;/div&gt;

&lt;p&gt;&lt;strong&gt;缺点&lt;/strong&gt; 表格和插图，图片存储位置在很多软件上面不统一，尤其是在线编辑器，markdown代码很容易复制过去，嗯，除非图片都保存在一个统一的云端(&lt;code&gt;PicGo&lt;/code&gt;图床上传工具你值得拥有)。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://lizhuangs.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="markdown" scheme="http://lizhuangs.github.io/categories/%E5%89%8D%E7%AB%AF/markdown/"/>
    
    
      <category term="hexo" scheme="http://lizhuangs.github.io/tags/hexo/"/>
    
      <category term="markdown" scheme="http://lizhuangs.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://lizhuangs.github.io/2019/05/08/hello-world/"/>
    <id>http://lizhuangs.github.io/2019/05/08/hello-world/</id>
    <published>2019-05-08T14:14:00.554Z</published>
    <updated>2019-05-11T19:55:16.305Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://lizhuangs.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="JS" scheme="http://lizhuangs.github.io/categories/%E5%89%8D%E7%AB%AF/JS/"/>
    
    
      <category term="PS3" scheme="http://lizhuangs.github.io/tags/PS3/"/>
    
      <category term="Games" scheme="http://lizhuangs.github.io/tags/Games/"/>
    
  </entry>
  
</feed>
